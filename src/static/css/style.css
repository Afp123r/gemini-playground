:root {
    /* Updated color palette for a softer, modern light theme */
    --primary-color: #4CAF50; /* A pleasant green for primary actions */
    --secondary-color: #2196F3; /* A vibrant blue for secondary actions */
    --danger-color: #F44336; /* Consistent red for danger/stop */
    --background-color: #F8F9FA; /* Light grey background */
    --surface-color: #FFFFFF; /* Pure white for card-like surfaces */
    --border-color: #E0E0E0; /* Lighter border for subtlety */
    --text-color: #333333; /* Darker text for readability */
    --text-secondary: #757575; /* Medium grey for secondary text */
    --shadow-color: rgba(0, 0, 0, 0.1); /* Subtle shadow */
    --border-radius-sm: 6px;
    --border-radius-md: 10px;
    --border-radius-lg: 12px;
    --spacing-xs: 4px;
    --spacing-sm: 8px;
    --spacing-md: 16px;
    --spacing-lg: 24px;
    --primary-color-rgb: 76, 175, 80; /* RGB for primary color */
}

body {
    font-family: 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
    display: flex;
    flex-direction: column;
    align-items: center; /* Center the app horizontally */
    min-height: 100vh;
    background-color: var(--background-color);
    color: var(--text-color);
    padding: var(--spacing-lg);
    box-sizing: border-box;
    margin: 0; /* Remove default body margin */
}

#app {
    background-color: var(--surface-color);
    border-radius: var(--border-radius-lg);
    padding: var(--spacing-lg);
    box-shadow: 0 6px 20px var(--shadow-color);
    width: 100%; /* Take full width on smaller screens */
    max-width: 900px; /* Limit width on larger screens */
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
    box-sizing: border-box; /* Ensure padding is included in width */
}

/* Header Bar for API Key and Settings Toggle */
.header-bar {
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
    margin-bottom: var(--spacing-md);
}

#api-key {
    flex-grow: 1;
    padding: 12px 15px;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius-md);
    background-color: #F5F5F5;
    color: var(--text-color);
    font-size: 1em;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.08);
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
    box-sizing: border-box; /* Include padding in width */
}

#api-key::placeholder {
    color: var(--text-secondary);
}

#api-key:focus {
    border-color: var(--primary-color);
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1), 0 0 0 3px rgba(var(--primary-color-rgb), 0.2);
    outline: none;
}

/* Config Toggle Button */
#config-toggle {
    background-color: var(--secondary-color);
    color: white;
    border: none;
    border-radius: var(--border-radius-md);
    padding: 12px;
    cursor: pointer;
    font-size: 1.2em;
    transition: background-color 0.3s ease, transform 0.3s ease;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
    flex-shrink: 0; /* Prevent button from shrinking */
}

#config-toggle:hover {
    background-color: #1976D2;
    transform: translateY(-1px);
}

#config-toggle.active {
    background-color: var(--primary-color);
    transform: rotate(90deg);
}

/* Configuration Container */
#config-container {
    background-color: #F0F0F0;
    border-radius: var(--border-radius-md);
    padding: var(--spacing-lg);
    margin-bottom: var(--spacing-md);
    box-shadow: inset 0 1px 4px rgba(0, 0, 0, 0.1);
    transition: all 0.4s ease-out;
    max-height: 0;
    overflow: hidden;
    opacity: 0;
    transform: translateY(-10px);
    box-sizing: border-box;
}

#config-container.active {
    max-height: 500px; /* Adjust based on content height */
    opacity: 1;
    transform: translateY(0);
}

.config-wrapper {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
}

.setting-container {
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
    flex-wrap: wrap;
}

.setting-label {
    font-weight: bold;
    color: var(--text-secondary);
    min-width: 90px;
}

select, textarea, input[type="number"] {
    flex-grow: 1;
    padding: 10px 12px;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius-sm);
    background-color: #FBFBFB;
    color: var(--text-color);
    font-size: 0.95em;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05);
    transition: border-color 0.3s ease;
    min-width: 150px;
    box-sizing: border-box;
}

select:focus, textarea:focus, input[type="number"]:focus {
    border-color: var(--primary-color);
    outline: none;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1), 0 0 0 3px rgba(var(--primary-color-rgb), 0.2);
}

textarea {
    resize: vertical;
    min-height: 100px;
}

input[type="number"] {
    width: 80px;
    text-align: center;
}

.fps-help {
    font-size: 0.85em;
    color: var(--text-secondary);
    margin-left: var(--spacing-sm);
}

#apply-config {
    background-color: var(--primary-color);
    color: white;
    padding: 12px 20px;
    border: none;
    border-radius: var(--border-radius-md);
    cursor: pointer;
    font-size: 1em;
    font-weight: bold;
    transition: background-color 0.3s ease, transform 0.2s ease;
    box-shadow: 0 4px 10px rgba(var(--primary-color-rgb), 0.3);
    align-self: flex-end;
}

#apply-config:hover {
    background-color: #388E3C;
    transform: translateY(-2px);
}

/* Connect Button */
#connect-button {
    background-color: var(--secondary-color);
    color: white;
    padding: 15px 25px;
    border: none;
    border-radius: var(--border-radius-md);
    cursor: pointer;
    font-size: 1.1em;
    font-weight: bold;
    transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease;
    box-shadow: 0 4px 10px rgba(33, 150, 243, 0.3);
    width: 100%;
    box-sizing: border-box;
}

#connect-button:hover {
    background-color: #1976D2;
    transform: translateY(-2px);
    box-shadow: 0 6px 15px rgba(33, 150, 243, 0.4);
}

#connect-button.connected {
    background-color: var(--danger-color);
    box-shadow: 0 4px 10px rgba(244, 67, 54, 0.3);
}

#connect-button.connected:hover {
    background-color: #D32F2F;
}

#connect-button:disabled {
    background-color: #B0B0B0;
    cursor: not-allowed;
    box-shadow: none;
    transform: none;
}

/* Log Container */
#logs-container {
    border: 1px solid var(--border-color);
    height: 300px;
    overflow-y: auto;
    padding: var(--spacing-md);
    border-radius: var(--border-radius-md);
    background: var(--surface-color);
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05);
    scroll-behavior: smooth;
    display: flex;
    flex-direction: column;
    gap: var(--spacing-sm);
    box-sizing: border-box;
}

#logs-container:hover {
    box-shadow: 0 4px 15px var(--shadow-color);
}

.log-entry {
    display: flex;
    align-items: flex-start;
    gap: var(--spacing-sm);
    padding: var(--spacing-sm) var(--spacing-md);
    border-radius: var(--border-radius-sm);
    font-size: 0.95em;
    line-height: 1.5;
}

.log-entry.system {
    background-color: #E8F5E9;
    color: #388E3C;
}

.log-entry.user {
    background-color: #E3F2FD;
    color: #1976D2;
    align-self: flex-end;
    max-width: 80%;
}

.log-entry.ai {
    background-color: #FFEBEE;
    color: #D32F2F;
    align-self: flex-start;
    max-width: 80%;
}

.log-entry .timestamp {
    font-size: 0.8em;
    color: var(--text-secondary);
    white-space: nowrap;
}

.log-entry .emoji {
    font-size: 1.1em;
    line-height: 1;
}

/* Input Controls (Message Input & Buttons) */
.input-controls {
    display: flex;
    gap: var(--spacing-sm);
    align-items: stretch;
    flex-wrap: wrap;
}

#message-input {
    flex-grow: 1;
    padding: 12px 15px;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius-md);
    background-color: #F5F5F5;
    color: var(--text-color);
    font-size: 1em;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.08);
    min-width: 150px;
    box-sizing: border-box;
}

#message-input::placeholder {
    color: var(--text-secondary);
}

#message-input:focus {
    border-color: var(--secondary-color);
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1), 0 0 0 3px rgba(33, 150, 243, 0.2);
    outline: none;
}

#message-input:disabled {
    background-color: #E0E0E0;
    cursor: not-allowed;
    color: #B0B0B0;
}

.input-controls button {
    background-color: var(--secondary-color);
    color: white;
    border: none;
    border-radius: var(--border-radius-md);
    padding: 12px 15px;
    cursor: pointer;
    font-size: 1em;
    transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
    display: flex;
    align-items: center;
    justify-content: center;
    white-space: nowrap;
    position: relative;
    overflow: hidden;
    flex-shrink: 0; /* Prevent buttons from shrinking too much */
}

.input-controls button:hover {
    background-color: #1976D2;
    transform: translateY(-1px);
}

.input-controls button:disabled {
    background-color: #B0B0B0;
    cursor: not-allowed;
    box-shadow: none;
    transform: none;
}

/* Button Ripple Effect */
.input-controls button::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: width 0.3s ease-out, height 0.3s ease-out;
    pointer-events: none;
    opacity: 0;
}

.input-controls button:active::after {
    width: 200px;
    height: 200px;
    opacity: 1;
    transition: width 0.0s, height 0.0s, opacity 0.3s ease-out;
}

#mic-button.active {
    background-color: var(--danger-color);
}
#mic-button.active:hover {
    background-color: #D32F2F;
}

#camera-button.active, #screen-button.active {
    background-color: var(--primary-color);
}
#camera-button.active:hover, #screen-button.active:hover {
    background-color: #388E3C;
}

/* Audio Visualizers */
.audio-visualizers {
    display: flex;
    gap: var(--spacing-md);
    margin-top: var(--spacing-md);
    flex-wrap: wrap;
    justify-content: space-around;
}

.visualizer-container {
    flex: 1;
    min-width: 280px;
    background-color: #F0F0F0;
    border-radius: var(--border-radius-md);
    padding: var(--spacing-md);
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.08);
    display: flex;
    flex-direction: column;
    gap: var(--spacing-sm);
    box-sizing: border-box;
}

.visualizer-container label {
    font-weight: bold;
    color: var(--text-secondary);
    font-size: 0.9em;
}

#input-audio-visualizer, #audio-visualizer {
    width: 100%;
    height: 20px;
    background-color: #E0E0E0;
    border-radius: var(--border-radius-sm);
    overflow: hidden;
    position: relative;
    border: 1px solid var(--border-color);
}

#input-audio-visualizer .audio-bar {
    height: 100%;
    background-color: var(--primary-color);
    width: 0%;
}

#audio-visualizer .audio-bar {
    height: 100%;
    background-color: var(--secondary-color);
    width: 0%;
}

/* Audio bar pulse animation */
@keyframes audio-pulse {
    0% { transform: scaleY(1); }
    50% { transform: scaleY(1.3); }
    100% { transform: scaleY(1); }
}

.audio-bar.active {
    animation: audio-pulse 0.5s infinite alternate;
}

/* Video and Screen Containers */
#video-container {
    position: fixed;
    bottom: var(--spacing-lg);
    right: var(--spacing-lg);
    width: 480px; /* Fixed width for desktop */
    z-index: 100;
    background-color: var(--surface-color);
    border-radius: var(--border-radius-lg);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
    padding: var(--spacing-md);
    border: 1px solid var(--border-color);
    box-sizing: border-box; /* Include padding in width */
}

#video-container video {
    width: 100%; /* Fill container width */
    height: auto; /* Maintain aspect ratio */
    border-radius: var(--border-radius-md);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    display: block; /* Remove extra space below video */
    object-fit: contain; /* Ensure video fits within bounds without cropping */
}

.video-controls {
    position: absolute;
    top: var(--spacing-sm);
    right: var(--spacing-sm);
    z-index: 101;
    display: flex;
    gap: var(--spacing-xs);
    opacity: 0;
    transition: opacity 0.3s ease;
}

#video-container:hover .video-controls {
    opacity: 1;
}

.video-controls button {
    background-color: var(--danger-color);
    color: white;
    border: none;
    padding: 8px 12px;
    border-radius: var(--border-radius-sm);
    cursor: pointer;
    font-size: 0.9em;
    transition: background-color 0.3s ease, transform 0.2s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.video-controls button:hover {
    background-color: #D32F2F;
    transform: translateY(-1px);
}

#stop-video {
    background-color: var(--danger-color);
}

#flip-camera {
    background-color: var(--secondary-color);
}
#flip-camera:hover {
    background-color: #1976D2;
}

/* Small frame preview canvas */
#frame-preview {
    position: absolute;
    bottom: var(--spacing-xs); /* Use spacing variable */
    right: var(--spacing-xs); /* Use spacing variable */
    width: 120px; /* Fixed size for small preview */
    height: 90px;
    border: 2px solid rgba(66, 133, 244, 0.8);
    border-radius: 4px;
    background: #000;
    z-index: 2;
    transition: all 0.3s ease;
    cursor: pointer;
}

#frame-preview:hover {
    transform: scale(1.1);
    border-color: #4285f4;
}

#frame-preview.enlarged {
    width: 480px;
    height: 360px;
    bottom: 50%;
    right: 50%;
    transform: translate(50%, 50%);
    z-index: 4;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
}

#frame-preview.enlarged::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    z-index: -1;
}

/* Screen Sharing Container */
#screen-container {
    position: fixed;
    top: var(--spacing-lg);
    right: var(--spacing-lg);
    width: 600px; /* Fixed width for desktop */
    height: 450px; /* Fixed height for desktop */
    z-index: 1000;
    display: none; /* Controlled by JS */
    background-color: var(--surface-color);
    border-radius: var(--border-radius-lg);
    overflow: hidden;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
    padding: var(--spacing-md);
    border: 1px solid var(--border-color);
    box-sizing: border-box;
    transition: all 0.3s ease;
}

#screen-preview {
    width: 100%;
    height: 100%; /* Fill container */
    object-fit: contain; /* Ensure screen share fits without cropping */
    background-color: black;
    display: block;
    border-radius: var(--border-radius-md);
}

#screen-container:hover {
    transform: scale(1.01);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.25);
}

#screen-container .close-button {
    position: absolute;
    top: var(--spacing-sm);
    right: var(--spacing-sm);
    background: rgba(0, 0, 0, 0.6);
    color: white;
    border: none;
    border-radius: 50%;
    width: 36px;
    height: 36px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease, background-color 0.3s ease;
    font-size: 1.3em;
}

#screen-container:hover .close-button {
    opacity: 1;
}

#screen-container .close-button:hover {
    background: rgba(0, 0, 0, 0.8);
}

/* Responsive styles */
@media (max-width: 768px) {
    body {
        padding: var(--spacing-md);
    }
    #app {
        padding: var(--spacing-md);
        width: 100%;
    }

    .header-bar, .setting-container, .input-controls {
        flex-direction: column;
        align-items: stretch;
        gap: var(--spacing-sm);
    }

    #api-key, select, textarea, input[type="number"], .input-controls button {
        width: 100%;
        box-sizing: border-box;
    }

    .setting-label {
        min-width: unset;
        text-align: left;
    }

    .fps-help {
        margin-left: 0;
        text-align: left;
    }

    .log-entry {
        font-size: 0.85em;
        padding: var(--spacing-xs) var(--spacing-sm);
    }
    
    .log-entry.user, .log-entry.ai {
        max-width: 100%;
    }

    .audio-visualizers {
        flex-direction: column;
        gap: var(--spacing-sm);
    }
    .visualizer-container {
        min-width: unset;
    }

    /* Mobile specific config panel (slide-in from right) */
    #config-container {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: 1000;
        transform: translateX(100%);
        transition: transform 0.3s ease-out;
        overflow-y: auto;
        display: block;
        background: var(--surface-color);
        padding: var(--spacing-lg);
        max-height: unset;
        opacity: 1;
        border-radius: 0;
        box-shadow: none;
    }

    #config-container.active {
        transform: translateX(0);
    }

    /* Video and Screen containers for mobile */
    #video-container {
        position: fixed;
        bottom: var(--spacing-md);
        left: var(--spacing-md);
        right: var(--spacing-md);
        width: auto; /* Allow width to be determined by left/right */
        height: auto; /* Let height adjust based on content/aspect ratio */
        max-height: 50vh; /* Limit max height to prevent it from taking too much screen */
        padding: var(--spacing-sm);
        box-sizing: border-box;
    }

    #video-container video {
        /* On mobile, ensure video fills its responsive container while maintaining aspect ratio */
        width: 100%;
        height: auto; /* Crucial for maintaining aspect ratio */
        object-fit: contain; /* Ensure entire video is visible, add black bars if needed */
    }

    #frame-preview {
        /* Adjust small preview position for mobile */
        width: 100px; /* Smaller preview on mobile */
        height: 75px;
        bottom: var(--spacing-sm);
        right: var(--spacing-sm);
    }

    #frame-preview.enlarged {
        /* Adjust enlarged preview for mobile to be more central */
        width: calc(100% - 2 * var(--spacing-md));
        height: auto; /* Let height adjust */
        max-height: 80vh;
        bottom: 50%;
        right: 50%;
        transform: translate(50%, 50%);
    }

    #screen-container {
        position: fixed;
        top: var(--spacing-md);
        left: var(--spacing-md);
        right: var(--spacing-md);
        width: auto; /* Allow width to be determined by left/right */
        height: auto; /* Let height adjust based on content/aspect ratio */
        max-height: calc(100vh - 2 * var(--spacing-md)); /* Fit to screen height */
        padding: var(--spacing-sm);
        box-sizing: border-box;
    }

    #screen-preview {
        /* On mobile, ensure screen preview fills its responsive container while maintaining aspect ratio */
        width: 100%;
        height: 100%; /* Still fill container */
        object-fit: contain; /* Ensure entire screen share is visible */
    }
}
